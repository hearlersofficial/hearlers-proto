syntax = "proto3";

package com.hearlers.v1.service;

import "com/hearlers/v1/model/counsel_prompt.proto";

option java_package = "com.hearlers.api.proto.v1.service";
option java_multiple_files = true;

service CounselPromptService {
    // Tone
    rpc CreateTone (CreateToneRequest) returns (CreateToneResponse);
    rpc FindTones (FindTonesRequest) returns (FindTonesResponse);
    rpc FindToneById (FindToneByIdRequest) returns (FindToneByIdResponse);
    rpc UpdateTone (UpdateToneRequest) returns (UpdateToneResponse);

    // 상담 기법
    rpc CreateCounselTechnique (CreateCounselTechniqueRequest) returns (CreateCounselTechniqueResponse);
    rpc FindCounselTechniques (FindCounselTechniquesRequest) returns (FindCounselTechniquesResponse);
    rpc FindCounselTechniqueById (FindCounselTechniqueByIdRequest) returns (FindCounselTechniqueByIdResponse);
    rpc UpdateCounselTechnique (UpdateCounselTechniqueRequest) returns (UpdateCounselTechniqueResponse);
    rpc SaveCounselTechniqueSequence (SaveCounselTechniqueSequenceRequest) returns (SaveCounselTechniqueSequenceResponse);
}


// Tone
message CreateToneRequest {
    string name = 1;
    string body = 2;
}

message CreateToneResponse {
    com.hearlers.v1.model.Tone tone = 1;
}

message FindTonesRequest {
    optional string name = 1;
}

message FindTonesResponse {
    repeated com.hearlers.v1.model.Tone tones = 1;
}

message FindToneByIdRequest {
    string tone_id = 1;
}

message FindToneByIdResponse {
    optional com.hearlers.v1.model.Tone tone = 1;
}

message UpdateToneRequest {
    string tone_id = 1;
    optional string name = 2;
    optional string body = 3;
}

message UpdateToneResponse {
    com.hearlers.v1.model.Tone tone = 1;
}


// 상담 기법
message CreateCounselTechniqueRequest {
    string name = 1;
    string tone_id = 2;
    string context = 3;
    string instruction = 4;
    int32 message_threshold = 5;
}

message CreateCounselTechniqueResponse {
    com.hearlers.v1.model.CounselTechnique counsel_technique = 1;
}

message FindCounselTechniquesRequest {
    optional string name = 1;
    optional string tone_id = 2;
}

message FindCounselTechniquesResponse {
    repeated com.hearlers.v1.model.CounselTechnique counsel_techniques = 1;
}

message FindCounselTechniqueByIdRequest {
    string counsel_technique_id = 1;
}

message FindCounselTechniqueByIdResponse {
    optional com.hearlers.v1.model.CounselTechnique counsel_technique = 1;
}
    
message UpdateCounselTechniqueRequest {
    string counsel_technique_id = 1;
    optional string name = 2;
    optional string context = 3;
    optional string instruction = 4;
    optional int32 message_threshold = 5;
}

message UpdateCounselTechniqueResponse {
    com.hearlers.v1.model.CounselTechnique counsel_technique = 1;
}

message SaveCounselTechniqueSequenceRequest {
    string toneId = 1;
    repeated string counsel_technique_ids = 2;
}

message SaveCounselTechniqueSequenceResponse {
    repeated com.hearlers.v1.model.CounselTechnique counsel_techniques = 1;
}
